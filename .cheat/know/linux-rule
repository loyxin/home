用户名: 密码 : uid  : gid :用户描述：家目录：登陆shell
umask是unix操作系统的概念，umask决定目录和文件被创建时得到的初始权限
umask = 022 时，新建的目录 权限是755，文件的权限是 644
umask = 077 时，新建的目录 权限是700，文件的权限时 600

setuid是什么？

setuid是文件的扩展属性，经常我们会用到的是777或者755等等，加了setuid就成了6777 4755等等，setuid是4，setgid是2.

setuid的作用？

设置了setuid，当任何进程启动该进程的时候会以root来启动进程，而不管当前uid是什么，通常需要的是root。

setuid如何设置？

chmod u+s file ；

chmod g+s file; setgid
简要说明命令的作用 whatis command
更加详细的说明文档 info command
查看路径 which command
查看程序的搜索路径 whereis command
locate会为文件系统建立索引数据库
英文版安装拼音输入法有问题 vi /etc/environment LC_CTYPE=zh_CN.UTF-8
进程之间可以互相通过系统调用kill发送软中断信号。
SIGHUP 1 A 终端挂起或者控制进程终止
SIGINT 2 A 键盘中断（如break键被按下）
SIGQUIT 3 C 键盘的退出键被按下
SIGILL 4 C 非法指令
SIGABRT 6 C 由abort(3)发出的退出指令
SIGFPE 8 C 浮点异常
SIGKILL 9 AEF Kill信号
SIGSEGV 11 C 无效的内存引用
SIGPIPE 13 A 管道破裂: 写一个没有读端口的管道
'\377' 文件描述符

getfacl 查看 文件权限
setfacl    -m    u:lee:rwx    /mnt/file   设定lee用户对file文件可以读写执行

loyxin : loyxin lp sudo users netdev lpadmin scanner sambashare
使用命令行groups 用户名，，可以查看当前用户所在组，以及组内其他成员的信息哦
/etc/group
group_name:passwd:GID:user_list
passwd 放到 /etc/shadow

/etc/passwd 注：用户（user）的配置文件；
/etc/shadow 注：用户（user）影子口令文件；

权限属性列表为10个字符：
第一个字符表示文件类型，d为目录 -为普通文件 l为连接 b为可存储的接口设备 c为键盘鼠标等输入设备
2、3、4个字符表示所有者权限，5、6、7个字符表示所有者同组用户权限，8、9、10为其他用户权限

/etc/passwd
login_name:passwd:UID:GID:user_name:home_directory:Shell
paswd口令不再直接保存在passwd文件中，通常将passwd文件中的口令字段使用一个“x”来代替，将/etc /shadow作为真正的口令文件，用于保存包括个人口令在内的数据。当然shadow文件是不能被普通用户读取的，只有超级用户才有权读取。 
用户名(user_name)：包含有关用户的一些信息，如用户的真实姓名、办公室地址、联系电话等。在Linux系统中，mail和finger等程序利用这些信息来标识系统的用户。

/bin/false是最严格的禁止login选项，一切服务都不能用，而/sbin/nologin只是不允许系统login，可以使用其他ftp等服务

/etc/shadow
用户名:加密密码:最后一次修改时间:最小修改时间间隔:密码有效期:密码需要变更前的警告天数:密码过期后的宽限天数:账号失效时间
，Linux 计算日期的时间是以  1970 年 1 月 1 日作为 1 不断累加得到的时间，到 1971 年 1 月 1 日，则为 366 天。这里显示 15775 天，也就是说，此 root 账号在 1970 年 1 月 1 日之后的第 15775 天修改的 root 用户密码。

ELF  Executable and Linkable Format

脚本/解释器
#! .....

当内核加载一个文件时，会首先读取文件的前 128 个字节，根据这 128 个字节判断文件的类型，然后调用相应的加载器来加载。

比如说，内核发现当前是一个 ELF 文件（ELF 文件前四个字节为固定值，称为魔数），那么就调用 ELF 加载器。
7f 45 4c 46 后面3个字节刚好是ELF这3个字母的ASCII码

文本文件
Windows 在行尾使用 CRLF (carriage return/line feed, 0d 0a)
UNIX 好像只使用 LF(0a)
#! -> 23 21 0a


，内核中有一个加载器叫做 binfmt_misc，看名字可以知道，这个加载器用于处理各种各样非标准的其他类型。
https://zh.wikipedia.org/wiki/Binfmt_misc

/mnt  Mounted file-systems
/opt  Optional software
/usr  User-oriented software
/var  Various other files: mail, spooling and logging

